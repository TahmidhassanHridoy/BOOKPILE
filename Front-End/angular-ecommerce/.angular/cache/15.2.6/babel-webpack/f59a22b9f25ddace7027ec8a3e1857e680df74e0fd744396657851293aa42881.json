{"ast":null,"code":"import { Product } from 'src/app/common/product';\nimport { CartItem } from 'src/app/common/cart-item';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/product.service\";\nimport * as i2 from \"src/app/services/cart.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nexport class ProductDetailsComponent {\n  constructor(productService, cartService, route) {\n    this.productService = productService;\n    this.cartService = cartService;\n    this.route = route;\n    this.product = new Product();\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(() => {\n      this.handleProductDetails();\n    });\n  }\n  handleProductDetails() {\n    // get the \"id\" param string. convert string to a number using the \"+\" symbol\n    const theProductId = +this.route.snapshot.paramMap.get('id');\n    this.productService.getProduct(theProductId).subscribe(data => {\n      this.product = data;\n    });\n  }\n  addToCart() {\n    console.log(`Adding to cart: ${this.product.name}, ${this.product.unitPrice}`);\n    const theCartItem = new CartItem(this.product);\n    this.cartService.addToCart(theCartItem);\n  }\n}\nProductDetailsComponent.ɵfac = function ProductDetailsComponent_Factory(t) {\n  return new (t || ProductDetailsComponent)(i0.ɵɵdirectiveInject(i1.ProductService), i0.ɵɵdirectiveInject(i2.CartService), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nProductDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProductDetailsComponent,\n  selectors: [[\"app-product-details\"]],\n  decls: 17,\n  vars: 7,\n  consts: [[1, \"detail-section\"], [1, \"container-fluid\"], [1, \"detail-img\", 3, \"src\"], [1, \"price\"], [1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"click\"], [\"routerLink\", \"/products\", 1, \"mt-5\"]],\n  template: function ProductDetailsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"img\", 2);\n      i0.ɵɵelementStart(3, \"h3\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 3);\n      i0.ɵɵtext(6);\n      i0.ɵɵpipe(7, \"currency\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function ProductDetailsComponent_Template_button_click_8_listener() {\n        return ctx.addToCart();\n      });\n      i0.ɵɵtext(9, \"Add to cart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"hr\");\n      i0.ɵɵelementStart(11, \"h4\");\n      i0.ɵɵtext(12, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"p\");\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"a\", 5);\n      i0.ɵɵtext(16, \"Back to Product List\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"src\", ctx.product.imageUrl, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.product.name);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(7, 4, ctx.product.unitPrice, \"USD\"));\n      i0.ɵɵadvance(8);\n      i0.ɵɵtextInterpolate(ctx.product.description);\n    }\n  },\n  dependencies: [i3.RouterLink, i4.CurrencyPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,OAAO,QAAQ,wBAAwB;AAIhD,SAASC,QAAQ,QAAQ,0BAA0B;;;;;;AAOnD,OAAM,MAAOC,uBAAuB;EAIlCC,YAAoBC,cAA8B,EAC9BC,WAAwB,EACxBC,KAAqB;IAFrB,mBAAc,GAAdF,cAAc;IACd,gBAAW,GAAXC,WAAW;IACX,UAAK,GAALC,KAAK;IAJzB,YAAO,GAAY,IAAIN,OAAO,EAAE;EAIa;EAE7CO,QAAQ;IACN,IAAI,CAACD,KAAK,CAACE,QAAQ,CAACC,SAAS,CAAC,MAAK;MACjC,IAAI,CAACC,oBAAoB,EAAE;IAC7B,CAAC,CAAC;EACJ;EAEAA,oBAAoB;IAElB;IACA,MAAMC,YAAY,GAAW,CAAC,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACJ,QAAQ,CAACK,GAAG,CAAC,IAAI,CAAE;IAErE,IAAI,CAACT,cAAc,CAACU,UAAU,CAACH,YAAY,CAAC,CAACF,SAAS,CACpDM,IAAI,IAAG;MACL,IAAI,CAACC,OAAO,GAAGD,IAAI;IACrB,CAAC,CACF;EACH;EAEAE,SAAS;IAEPC,OAAO,CAACC,GAAG,CAAC,mBAAmB,IAAI,CAACH,OAAO,CAACI,IAAI,KAAK,IAAI,CAACJ,OAAO,CAACK,SAAS,EAAE,CAAC;IAC9E,MAAMC,WAAW,GAAG,IAAIrB,QAAQ,CAAC,IAAI,CAACe,OAAO,CAAC;IAC9C,IAAI,CAACX,WAAW,CAACY,SAAS,CAACK,WAAW,CAAC;EAEzC;;AAhCWpB,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZpCC,8BAA4B;MAGpBA,yBAAqD;MAErDA,0BAAI;MAAAA,YAAkB;MAAAA,iBAAK;MAC3BA,8BAAmB;MAAAA,YAAwC;;MAAAA,iBAAM;MACjEA,iCAA6D;MAArDA;QAAA,OAASC,eAAW;MAAA,EAAC;MAAgCD,2BAAW;MAAAA,iBAAS;MAEjFA,sBAAI;MACJA,2BAAI;MAAAA,4BAAW;MAAAA,iBAAK;MACpBA,0BAAG;MAAAA,aAAyB;MAAAA,iBAAI;MAEhCA,6BAAuC;MAAAA,qCAAoB;MAAAA,iBAAI;;;MAV1DA,eAA4B;MAA5BA,uEAA4B;MAE7BA,eAAkB;MAAlBA,sCAAkB;MACHA,eAAwC;MAAxCA,wEAAwC;MAKxDA,eAAyB;MAAzBA,6CAAyB","names":["Product","CartItem","ProductDetailsComponent","constructor","productService","cartService","route","ngOnInit","paramMap","subscribe","handleProductDetails","theProductId","snapshot","get","getProduct","data","product","addToCart","console","log","name","unitPrice","theCartItem","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["F:\\Spring Boot Java\\E-Commerce\\Front-End\\angular-ecommerce\\src\\app\\components\\product-details\\product-details.component.ts","F:\\Spring Boot Java\\E-Commerce\\Front-End\\angular-ecommerce\\src\\app\\components\\product-details\\product-details.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Product } from 'src/app/common/product';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { CartItem } from 'src/app/common/cart-item';\r\n\r\n@Component({\r\n  selector: 'app-product-details',\r\n  templateUrl: './product-details.component.html',\r\n  styleUrls: ['./product-details.component.css']\r\n})\r\nexport class ProductDetailsComponent implements OnInit {\r\n\r\n  product: Product = new Product();\r\n\r\n  constructor(private productService: ProductService,\r\n              private cartService: CartService,\r\n              private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(() => {\r\n      this.handleProductDetails();\r\n    })\r\n  }\r\n\r\n  handleProductDetails() {\r\n\r\n    // get the \"id\" param string. convert string to a number using the \"+\" symbol\r\n    const theProductId: number = +this.route.snapshot.paramMap.get('id')!;\r\n\r\n    this.productService.getProduct(theProductId).subscribe(\r\n      data => {\r\n        this.product = data;\r\n      }\r\n    )\r\n  }\r\n\r\n  addToCart() {\r\n\r\n    console.log(`Adding to cart: ${this.product.name}, ${this.product.unitPrice}`);\r\n    const theCartItem = new CartItem(this.product);\r\n    this.cartService.addToCart(theCartItem);\r\n    \r\n  }\r\n\r\n}\r\n","<div class=\"detail-section\">\r\n    <div class=\"container-fluid\">\r\n\r\n        <img src=\"{{ product.imageUrl }}\" class=\"detail-img\">\r\n\r\n        <h3>{{ product.name }}</h3>\r\n        <div class=\"price\">{{ product.unitPrice | currency:'USD' }}</div>\r\n        <button (click)=\"addToCart()\" class=\"btn btn-primary btn-sm\">Add to cart</button>\r\n\r\n        <hr>\r\n        <h4>Description</h4>\r\n        <p>{{ product.description }}</p>\r\n\r\n        <a routerLink=\"/products\" class=\"mt-5\">Back to Product List</a>\r\n    </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}